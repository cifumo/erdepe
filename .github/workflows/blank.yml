name: CI

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Download ngrok
        run: |
          Invoke-WebRequest `
            -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" `
            -OutFile "ngrok.zip"

      - name: Extract ngrok
        run: Expand-Archive -Path ngrok.zip -DestinationPath ./ngrok

      - name: List Extracted Files (Debug)
        run: Get-ChildItem -Path ./ngrok -Recurse

      - name: Authenticate ngrok
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          $ngrokPath = ".\ngrok\ngrok.exe"
          if (Test-Path $ngrokPath) {
            & $ngrokPath authtoken $Env:NGROK_AUTH_TOKEN
          } else {
            Write-Error "ngrok.exe not found!"
            exit 1
          }

      - name: Enable Remote Desktop (RDP)
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "UserAuthentication" -Value 1

      - name: Set Runner Password
        run: |
          $password = ConvertTo-SecureString "P@ssw0rd!" -AsPlainText -Force
          Set-LocalUser -Name "runneradmin" -Password $password

      - name: Create ngrok Tunnel
        run: |
          $ngrokPath = ".\ngrok\ngrok.exe"
          if (Test-Path $ngrokPath) {
            & $ngrokPath tcp 3389
          } else {
            Write-Error "ngrok.exe not found!"
            exit 1
          }
